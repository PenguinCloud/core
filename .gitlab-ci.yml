# PenguinTech
    
stages:
  - test
  - build
  - deploy

variables:
  IMAGE_TAG: $CI_MERGE_REQUEST_MILESTONE$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

before_script:
  - docker info
  - docker pull ubuntu
  - cat ~/.docker/token | docker login --password-stdin -u cicd  $CI_REGISTRY 
  - echo my image that is  $CI_PROJECT_NAME:$IMAGE_TAG


build:
  stage: build
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  script:
    - docker build -t $CI_PROJECT_NAME:$IMAGE_TAG .
    - docker image tag  $CI_PROJECT_NAME:$IMAGE_TAG $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    
deploy:
  stage: deploy
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  script:
    - docker build -t $CI_PROJECT_NAME .
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  # Run this job in a branch where a Dockerfile exists and on a scheduled build on main
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
    - if: $CI_PIPELINE_SOURCE != 'merge_request_event'        
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
