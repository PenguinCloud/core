# PenguinTech

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
stages:
  - build
  - test
  - deploy

variables:
  IMAGE_TAG: $CI_MERGE_REQUEST_MILESTONE$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

before_script:
  - docker info
  - docker pull ubuntu
  - cat ~/.docker/token | docker login --password-stdin -u cicd  $CI_REGISTRY 
  - echo my image that is  $CI_PROJECT_NAME:$IMAGE_TAG
alpha:
  stage: build
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  script:
    - docker build -t $CI_PROJECT_NAME .
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:alpha
    - docker push $CI_REGISTRY_IMAGE:alpha
  # Run this job in a branch where a Dockerfile exists and on a scheduled build on main
  rules:
    - if: $CI_COMMIT_BRANCH == "alpha"
  except:
    - schedules


beta:
  stage: build
  tags:
    - CICD
    - MERGE
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  script:
    - docker build -t $CI_PROJECT_NAME:$CI_MERGE_REQUEST_MILESTONEbeta .
    - docker image tag  $CI_PROJECT_NAME:$IMAGE_TAG $CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_MILESTONEbeta
    - docker push $CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_MILESTONEbeta
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH == "beta"
  except:
    - schedules

prod-merge:
  stage: build
  release:
    tag_name: $CI_MERGE_REQUEST_MILESTONE
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  script:
    - docker build -t $CI_PROJECT_NAME .
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:latest
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:stable
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_MILESTONE
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:stable
    - docker push $CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_MILESTONE
  # Run this job in a branch where a Dockerfile exists and on a scheduled build on main
  except:
    - schedules
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"


prod-sched:
  stage: build
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  script:
    - docker build -t $CI_PROJECT_NAME .
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:latest
    - docker image tag  $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:stable
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:stable
  # Run this job in a branch where a Dockerfile exists and on a scheduled build on main
  only:
    - schedules
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE != 'merge_request_event'